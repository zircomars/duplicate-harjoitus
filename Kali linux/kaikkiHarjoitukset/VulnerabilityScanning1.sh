# Vulnerability Scanning
# Offensive-Security-OSCP-by-Offensive-Security (PAGE 206-209)

# Vulnerability finding is an intergral part of the security assessments. While doing manual, specialized taks that give the knowledge and experience during a seucrity audit, automated vulnerability scanners are nonetheless invaluable when is used in proper context. 

# vulnerability scanning most important check the outline basic considerations regarding both automated and manual scanning, and discuss both critical nuances.

#########################
# How Vulnerability Scanners Work
# The vulnerability scanner implementation vary, but there is priority follow a standard workflow, and most automated scanners will...
# 1. Detect if a target is up and running , 2. conduct a full or partial port scan, depending on the configurations
# 3. identify the operating system using by fingerprinting techniques or other mfa techonologies
# 4. attempt to identify running services/server with common tehcniques such as banner grabbing
# 5. execute a signature-matching process to discover vulnerabilitys

# A penetration tester may execute some tpe of signature-matching process. Like may remembert that a particular version of an application in the field is vulnerable to a remote exploit. As an automated scanner performs this step with the assistance of unique vulnerability signatures.

# Part of the signature-matching process, there is many scanners can use banner grabbing, a siple technique where text string generated during an initial interaction with an application are obtained and analyzed.

# for example applications generate very specific banners such as OpenSSH which may return SSH-2.0-OpenSSH_7.9p1 Debian-10, it will allowing to precisely pinpoint the application version. Another application example Apache Tomcat versions 4.1.x to 8.0x return a generic HTTP header of Apache-Coyote/1.1. 
# More specific of the headers and banners make it easier for the scanner to determine the application version and by extension to the accurately detect potential vulnerabilities.

########################################

# some vulnerability scanners can be configured to exploit a vulnerability upon detection. So this can reduce the likelihood of a false positive but it also increase the risk of crashing the service. Before that check scanner options carefully.

# Automated scanners insect a wide variety of other target information during the signature matching process. a strong signature match does not guarantee the presence of a vulnerability. Automated scanners can be generated quite a few false positives and by contrast, false negatives, which means a vulnerability is overlooked because of a signature mismatch.

# false positives and negatives can occur because of backporting, in which package maintainers will "roll back" software security patches to olders versions. Backporting may will give the result in the scanner floagging software as a vulnerable version when the vulnerability has actually been repaired.

# this is why should be more carefully inspect and mnually review vulnerability scan results whenever possible. It will given the ever-changing and complex technology landscape, vulnerabilities can show up in unexpected places. 








